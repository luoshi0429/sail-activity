<template>
  <block >
    <view wx:if="{{ user.phoneNumber }}" >
      <FormIdButton>
        <view slot="common" class="record-item-wrapper">
          <image class="logo" src="{{item.courseBanner}}" mode="aspectFill" />
          <view class="info">
            <view>
              <view class="title">{{ item.courseName }}</view>
              <view class="desc">{{ item.courseDesc }}</view>
            </view>
            <view class="other">
              <view class="people">{{ item.pv }}人学习</view>
              <view class="watch"><image  src='https://static.sunlands.com/wechat-management/prod/openCourse/assets/icon-video.svg' />看录播</view>
            </view>
          </view>
        </view>
      </FormIdButton>
    </view>
      <FormIdButton wx:else :businessItem.sync='item' businessId='syllabusId' business="enter_record" @savePhoneNumber.user='savePhoneNumber'>
        <view slot="phone" class="record-item-wrapper">
          <image class="logo" src="{{item.courseBanner}}" mode="aspectFill" />
          <view class="info">
            <view>
              <view class="title">{{ item.courseName }}</view>
              <view class="desc">{{ item.courseDesc }}</view>
            </view>
            <view class="other">
              <view class="people">{{ item.pv }}人学习</view>
              <view class="watch"><image  src='https://static.sunlands.com/wechat-management/prod/openCourse/assets/icon-video.svg' />看录播</view>
            </view>
          </view>
        </view>
      </FormIdButton>
  </block>
</template>

<script>
  import wepy from 'wepy'
  import FormIdButton from './form-id-button'
  import { connect } from 'wepy-redux'

  @connect({
    user (state) {
      return state.user
    }
  })

  export default class extends wepy.component {
    props = {
      item: {
        type: Object,
        default: {}
      }
    }
    components = {
      FormIdButton
    }
    methods = {
      savePhoneNumber () {
        if (!this.user.phoneNumber) return
        this.$emit('onItemTap', this.item)
      },
      handleTap () {
        if (!this.user.phoneNumber) return
        this.$emit('onItemTap', this.item)
      }
    }
  }
</script>


<style lang="less" scoped>
  .record-item-wrapper {
    display: flex;
    padding: 43rpx 43rpx 0 34rpx;
  }
  .logo {
    width: 260rpx;
    height: 156rpx;
    border-radius: 8rpx;
    margin-right: 15rpx;
  }
  .info {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    .title {
      font-size: 28rpx;
      color: #000;
      font-weight: bold;
      line-height: 40rpx;
      overflow: hidden;
      text-overflow: ellipsis;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      word-break:break-all;
    }
    .desc {
      font-size: 26rpx;
      color: #666;
      line-height: 36rpx;
      width: 400rpx;
      text-overflow: ellipsis;
      overflow: hidden;
      white-space: nowrap;
    }
    .other {
      display: flex;
      justify-content: space-between;
      font-size: 24rpx;
      line-height: 34rpx;
      color: #666;
      .watch {
        color: #B19A6A;
        display: flex;
        align-items: center;
        image {
          width: 25rpx;
          height: 24rpx;
          margin-right: 10rpx;
        }
      }
    }
  }
</style>
